% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_mnhmm.R
\name{estimate_mnhmm}
\alias{estimate_mnhmm}
\title{Build and Estimate a Mixture Non-homogeneous Hidden Markov Model}
\usage{
estimate_mnhmm(
  observations,
  n_states,
  n_clusters,
  initial_formula = ~1,
  transition_formula = ~1,
  emission_formula = ~1,
  cluster_formula = ~1,
  data = NULL,
  data0 = NULL,
  state_names = NULL,
  channel_names = NULL,
  cluster_names = NULL,
  inits = "random",
  init_sd = 2,
  restarts = 1L,
  threads = 1L,
  ...
)
}
\arguments{
\item{observations}{An \code{stslist} object
(see \code{\link[TraMineR:seqdef]{TraMineR::seqdef()}}) containing the sequences.}

\item{n_states}{A positive integer defining the number of hidden states.}

\item{n_clusters}{A positive integer defining the number of clusters
(mixtures).}

\item{initial_formula}{of class \code{\link[=formula]{formula()}} for the
initial state probabilities.}

\item{transition_formula}{of class \code{\link[=formula]{formula()}} for the
state transition probabilities.}

\item{emission_formula}{of class \code{\link[=formula]{formula()}} for the
state emission probabilities.}

\item{cluster_formula}{of class \code{\link[=formula]{formula()}} for the
mixture probabilities.}

\item{data}{A data frame containing the variables used in the transition and
emission formulas. Data should be sorted so the first T rows corresponds to
observations of the first sequence and so forth.}

\item{data0}{A data frame containing the variables used in the initial
state and cluster formulas. Data should be sorted so that the first row
corresponds to covariates of the first sequence and so forth.}

\item{state_names}{A vector of optional labels for the hidden states. If this
is \code{NULL} (the default), numbered states are used.}

\item{channel_names}{A vector of optional names for the channels. If this
is \code{NULL} (the default), numbered channels are used.}

\item{cluster_names}{A vector of optional labels for the clusters. If this
is \code{NULL} (the default), numbered clusters are used.}

\item{inits}{Optional initial values for the initial state, transition,
emission, and mixture probabilities. Either a list with \code{initial_probs},
\code{emission_probs}, \code{transition_probs}, \code{cluster_probs}, or \code{"random"}.}

\item{init_sd}{Standard deviation of the normal distribution used to generate
random initial values. Default is \code{2}. If you want to fix the initial values
of the regression coefficients to zero, use \code{init_sd = 0}.}

\item{restarts}{Number of times to run optimization using random starting
values. Default is 1.}

\item{threads}{Number of parallel threads for optimization with restarts.
Default is 1.}

\item{...}{Additional arguments to \code{\link[rstan:stanmodel-method-optimizing]{rstan::optimizing()}}.}
}
\value{
Object of class \code{nhmm}.
}
\description{
Function \code{estimate_mnhmm} estimates a hidden Markov model object of class
\code{mnhmm} where initial, transition, emission, and mixture probabilities
(potentially) depend on covariates.#'
}
\examples{
data("mvad", package = "TraMineR")

mvad_alphabet <-
  c("employment", "FE", "HE", "joblessness", "school", "training")
mvad_labels <- c("employment", "further education", "higher education",
                 "joblessness", "school", "training")
mvad_scodes <- c("EM", "FE", "HE", "JL", "SC", "TR")
mvad_seq <- seqdef(mvad, 17:86, alphabet = mvad_alphabet,
                   states = mvad_scodes, labels = mvad_labels, xtstep = 6,
                   cpal = unname(colorpalette[[6]]))

set.seed(1)
fit <- estimate_mnhmm(mvad_seq, n_states = 3, n_clusters = 2)
}
